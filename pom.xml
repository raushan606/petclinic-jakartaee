<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.woehlke.jakartaee</groupId>
    <artifactId>petclinic-jakartaee</artifactId>
    <packaging>war</packaging>
    <version>10.0.0.15-SNAPSHOT</version>

    <name>Petclinic Jakarta EE 10</name>
    <description>
        Petclinic Jakarta EE - a Jakarta EE 10 Version of Spring Petclinic demo application using PrimeFaces JSF.
    </description>
    <url>https://java.woehlke.org/jakartaee/petclinic-jakartaee</url>

    <organization>
        <name>Jakarta-EE-Petclinic</name>
        <url>https://github.com/Jakarta-EE-Petclinic</url>
    </organization>
    <inceptionYear>2019</inceptionYear>

    <developers>
        <developer>
            <id>thomaswoehlke</id>
            <name>Thomas Woehlke</name>
            <email>thomas.woehlke@gmail.com</email>
            <url>https://github.com/thomaswoehlke</url>
            <timezone>Europe/Paris</timezone>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:Jakarta-EE-Petclinic/petclinic-jakartaee.git</connection>
        <developerConnection>scm:git:git@github.com:Jakarta-EE-Petclinic/petclinic-jakartaee.git</developerConnection>
        <url>https://github.com/Jakarta-EE-Petclinic/petclinic-jakartaee/tree/${project.scm.tag}</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <url>https://github.com/Jakarta-EE-Petclinic/petclinic-jakartaee/issues</url>
        <system>GitHub</system>
    </issueManagement>

    <distributionManagement>
        <site>
            <id>jakartaee-petclinic.public_html</id>
            <url>file:///${user.home}/public_html/java/jakartaee/petclinic-jakartaee</url>
        </site>
        <snapshotRepository>
            <id>snapshots</id>
            <name>tw-thinkpad-snapshots</name>
            <url>file://${user.home}/public_html/java/libs-snapshot-local</url>
        </snapshotRepository>
        <repository>
            <id>central</id>
            <name>tw-thinkpad-releases</name>
            <url>file://${user.home}/public_html/java/libs-release-local</url>
        </repository>
    </distributionManagement>

    <properties>
        <java.version>11</java.version>
        <version.maven>3.6.3</version.maven>
        <junit.version>5.8.2</junit.version>
        <version.junit-platform-suite-engine>1.9.1</version.junit-platform-suite-engine>
        <version.org.apache.maven.scm>1.13.0</version.org.apache.maven.scm>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <skipIntegrationTests>false</skipIntegrationTests>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <root.dir>${project.basedir}</root.dir>

        <!-- plantuml -->
        <version.plantuml-maven-plugin>1.5.2</version.plantuml-maven-plugin>
        <version.net.sourceforge.plantuml>1.2023.7</version.net.sourceforge.plantuml>

        <!-- general -->
        <version.log4j>2.17.2</version.log4j>
        <version.jakarta.json>2.0.1</version.jakarta.json>
        <version.apache.commons.commons-lang3>3.12.0</version.apache.commons.commons-lang3>
        <version.org.slf4j.slf4j-api>1.7.25</version.org.slf4j.slf4j-api>

        <!-- jakartaee APIs -->
        <version.jakarta.jakartaee-api>10.0.0</version.jakarta.jakartaee-api>
        <version.org.eclipse.microprofile>6.0</version.org.eclipse.microprofile>

        <!-- Database JDBC Driver -->
        <version.postgresql.driver>42.5.1</version.postgresql.driver>

        <!-- JAX-RS JSON -->
        <version.org.jboss.resteasy>6.0.1.Final</version.org.jboss.resteasy>

        <!-- webjars Frontend -->
        <version.webjars.jquery>3.6.0</version.webjars.jquery>
        <version.webjars.popper.js>2.9.3</version.webjars.popper.js>
        <version.webjars.bootstrap>5.2.3</version.webjars.bootstrap>
        <version.webjars.font-awesome>6.4.0</version.webjars.font-awesome>
        <version.webjars.primeflex>3.3.0</version.webjars.primeflex>
        <version.org.primefaces>12.0.0</version.org.primefaces>

        <!-- OpenLiberty -->
        <version.openliberty-runtime>23.0.0.4</version.openliberty-runtime>
        <version.liberty-maven-plugin>3.8</version.liberty-maven-plugin>
        <generateFeatures>false</generateFeatures>
        <runtime.jakartaee.server.openliberty.remote>/opt/openliberty/wlp</runtime.jakartaee.server.openliberty.remote>
        <runtime.jakartaee.server.openliberty.ServerName>petclinicServer
        </runtime.jakartaee.server.openliberty.ServerName>
        <version.infinispan-jcache-remote>14.0.9.Final</version.infinispan-jcache-remote>
        <version.arquillian-liberty-support-jakarta>2.1.2</version.arquillian-liberty-support-jakarta>
        <version.arquillian-liberty-managed-jakarta>2.1.2</version.arquillian-liberty-managed-jakarta>
        <liberty.runtime.version>${version.openliberty-runtime}</liberty.runtime.version>

        <!-- Wildfly -->
        <version.wildfly-runtime>28.0.1.Final</version.wildfly-runtime>
        <version.wildfly-maven-plugin>4.1.0.Final</version.wildfly-maven-plugin>
        <version.wildfly-jar-maven-plugin>9.0.0.Final</version.wildfly-jar-maven-plugin>
        <version.wildfly-galleon-maven-plugin>5.2.8.Final</version.wildfly-galleon-maven-plugin>
        <version.jboss-logmanager>2.1.19.Final</version.jboss-logmanager>
        <plugin.fork.embedded>true</plugin.fork.embedded>
        <wildfly.version>${version.wildfly-runtime}</wildfly.version>
        <jersey.version>3.0.4</jersey.version>
        <version.wildfly-arquillian-container-managed>5.0.0.Final</version.wildfly-arquillian-container-managed>
        <version.wildfly-arquillian>5.0.0.Final</version.wildfly-arquillian>

        <!-- Payara -->
        <version.payara-runtime>6.2023.4</version.payara-runtime>
        <version.payara>${version.payara-runtime}</version.payara>
        <version.payaramicro.maven.plugin>1.4.0</version.payaramicro.maven.plugin>
        <version.arquillian-payara>3.0.alpha7</version.arquillian-payara>
        <payara-arquillian-container.version>3.0.alpha7</payara-arquillian-container.version>

        <!-- Glassfish -->
        <glassfish.version>7.0.5</glassfish.version>
        <version.arquillian-glassfish-server-managed>1.4</version.arquillian-glassfish-server-managed>

        <!-- maven Plugin Versions -->
        <version.org.projectlombok.lombok>1.18.24</version.org.projectlombok.lombok>
        <version.lombok-maven-plugin>1.18.20.0</version.lombok-maven-plugin>
        <version.cargo-maven3-plugin>1.10.4</version.cargo-maven3-plugin>
        <version.maven-compiler-plugin>3.10.1</version.maven-compiler-plugin>
        <version.maven-source-plugin>3.2.1</version.maven-source-plugin>
        <version.maven-jxr-plugin>3.2.0</version.maven-jxr-plugin>
        <version.maven-war-plugin>3.3.2</version.maven-war-plugin>
        <version.maven-dependency-plugin>3.3.0</version.maven-dependency-plugin>
        <version.maven-resources-plugin>3.3.0</version.maven-resources-plugin>
        <version.maven-javadoc-plugin>3.4.0</version.maven-javadoc-plugin>
        <version.maven-clean-plugin>3.2.0</version.maven-clean-plugin>
        <version.maven-install-plugin>3.0.0</version.maven-install-plugin>
        <version.maven-deploy-plugin>3.0.0</version.maven-deploy-plugin>
        <version.maven-release-plugin>3.0.0-M7</version.maven-release-plugin>
        <version.maven-failsafe-plugin>3.0.0-M7</version.maven-failsafe-plugin>
        <version.maven-surefire-plugin>3.0.0-M7</version.maven-surefire-plugin>
        <version.maven-invoker-plugin>3.3.0</version.maven-invoker-plugin>
        <version.maven-site-plugin>3.12.0</version.maven-site-plugin>
        <version.maven-project-info-reports-plugin>3.3.0</version.maven-project-info-reports-plugin>
        <version.maven-checkstyle-plugin>3.1.2</version.maven-checkstyle-plugin>
        <version.maven-checkstyle-plugin.checkstyle>10.4</version.maven-checkstyle-plugin.checkstyle>
        <version.maven-pmd-plugin>3.17.0</version.maven-pmd-plugin>
        <version.maven-pmd-plugin.pmd>6.49.0</version.maven-pmd-plugin.pmd>
        <version.maven-surefire-report-plugin>3.0.0-M7</version.maven-surefire-report-plugin>
        <version.spotbugs-maven-plugin>4.7.0.0</version.spotbugs-maven-plugin>
        <version.asciidoctor-maven-plugin>2.2.2</version.asciidoctor-maven-plugin>

        <!-- maven DevOps Plugin Versions -->
        <version.docker-compose-maven-plugin>4.0.0</version.docker-compose-maven-plugin>

        <!-- Arquillian 1.7.0 adds Jakarta EE 10 and JUnit 5 support-->
        <junit-jupiter.version>5.8.2</junit-jupiter.version>
        <selenium.version>4.1.2</selenium.version>
        <version.arquillian.core>1.7.0.Alpha11</version.arquillian.core>
        <arquillian-drone-bom.version>3.0.0-alpha.3</arquillian-drone-bom.version>
        <graphene-webdriver.version>3.0.0-alpha.3</graphene-webdriver.version>

        <!-- Test Utilities -->
        <mockito.version>4.6.1</mockito.version>
        <json-path.version>2.7.0</json-path.version>
        <awaitility.version>4.2.0</awaitility.version>
        <hamcrest.version>2.2</hamcrest.version>
        <jsonassert.version>1.5.0</jsonassert.version>
        <assertj.version>3.23.1</assertj.version>

        <skip.unit.tests>true</skip.unit.tests>
        <skip.integration.tests>true</skip.integration.tests>

        <cargo.hostname>localhost</cargo.hostname>
        <cargo.servlet.port>8080</cargo.servlet.port>
        <cargo.zipUrlInstaller.downloadDir>${project.basedir}/installs</cargo.zipUrlInstaller.downloadDir>
    </properties>

    <repositories>
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo1.maven.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jcenter</id>
            <name>JCenter Repository</name>
            <url>https://jcenter.bintray.com/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>payara-nexus-artifacts</id>
            <url>https://nexus.payara.fish/repository/payara-artifacts</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>staged-jakarta-releases</id>
            <url>https://jakarta.oss.sonatype.org/content/groups/staging/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-releases</id>
            <name>JBoss Releases Repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-thirdparty-releases</id>
            <name>JBoss 3rd-party Repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>sonatype-releases</id>
            <name>Sonatype Repository</name>
            <url>https://oss.sonatype.org/content/repositories/releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-public</id>
            <name>JBoss Public Repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/public/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>redhat-ga</id>
            <name>Redhat GA Repository</name>
            <url>https://maven.repository.redhat.com/ga/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <!--
		<repository>
			<id>ICM</id>
			<name>ICM Repository</name>
			<url>https://maven.icm.edu.pl/artifactory/repo/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		-->
        <repository>
            <id>Archive</id>
            <name>Archive Repository</name>
            <url>http://builds.archive.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jahia</id>
            <name>Jahia Repository</name>
            <url>https://maven.jahia.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>aspose</id>
            <name>Aspose Repository</name>
            <url>https://repository.aspose.com/repo/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>OneBusAway-Pub</id>
            <name>OneBusAway Pub Repository</name>
            <url>http://nexus.onebusaway.org/nexus/content/repositories/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>primefaces</id>
            <name>Primefaces Repository</name>
            <url>https://repository.primefaces.org</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>Payara</id>
            <url>https://nexus.payara.fish/service/rest/repository/browse/payara-artifacts/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>Central</id>
            <name>Central Repository</name>
            <url>https://repo1.maven.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>primefaces-repo</id>
            <name>PrimeFaces Maven Repository</name>
            <url>https://repository.primefaces.org</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>java.net-public</id>
            <name>Maven Java Net Snapshots and Releases</name>
            <url>https://maven.java.net/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>jboss-3rd-party-repository</id>
            <name>JBoss 3rd-party Repository</name>
            <url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Maven Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>Alfresco</id>
            <name>Alfresco Repository</name>
            <url>https://artifacts.alfresco.com/nexus/content/repositories/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>Payara</id>
            <url>https://nexus.payara.fish/service/rest/repository/browse/payara-artifacts/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-bom</artifactId>
                <version>${version.jakarta.jakartaee-api}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile</groupId>
                <artifactId>microprofile</artifactId>
                <version>${version.org.eclipse.microprofile}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-api</artifactId>
                <version>${version.jakarta.jakartaee-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${version.arquillian.core}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-bom</artifactId>
                <version>${arquillian-drone-bom.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-webdriver-depchain</artifactId>
                <version>${arquillian-drone-bom.version}</version>
                <type>pom</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.graphene</groupId>
                <artifactId>graphene-webdriver</artifactId>
                <version>${graphene-webdriver.version}</version>
                <type>pom</type>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-webdriver</artifactId>
                <version>${graphene-webdriver.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian.graphene</groupId>
                <artifactId>graphene-webdriver-api</artifactId>
                <version>${graphene-webdriver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.graphene</groupId>
                <artifactId>graphene-webdriver-impl</artifactId>
                <version>${graphene-webdriver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.graphene</groupId>
                <artifactId>arquillian-browser-screenshooter</artifactId>
                <version>${graphene-webdriver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.graphene</groupId>
                <artifactId>graphene-webdriver-ftest</artifactId>
                <version>${graphene-webdriver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.graphene</groupId>
                <artifactId>graphene-webdriver-spi</artifactId>
                <version>${graphene-webdriver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-api</artifactId>
                <version>${graphene-webdriver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-impl</artifactId>
                <version>${arquillian-drone-bom.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-spi</artifactId>
                <version>${graphene-webdriver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-drone-configuration</artifactId>
                <version>${graphene-webdriver.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-phantom-driver</artifactId>
                <version>1.2.1.1</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>2.3.2</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>2.3.2</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.shrinkwrap</groupId>
                <artifactId>shrinkwrap-impl-base</artifactId>
                <version>1.2.6</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.shrinkwrap.descriptors</groupId>
                <artifactId>shrinkwrap-descriptors-api-base</artifactId>
                <version>2.0.0</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${jsonassert.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <!--
			<dependency>
				<groupId>net.bytebuddy</groupId>
				<artifactId>byte-buddy</artifactId>
				<version>1.12.13</version>
				<scope>test</scope>
			</dependency>
			-->
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path-assert</artifactId>
                <version>${json-path.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgresql.driver}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.maven.scm</groupId>
                <artifactId>maven-scm-providers-standard</artifactId>
                <version>${version.org.apache.maven.scm}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.scm</groupId>
                <artifactId>maven-scm-provider-svnexe</artifactId>
                <version>${version.org.apache.maven.scm}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.scm</groupId>
                <artifactId>maven-scm-provider-svn-commons</artifactId>
                <version>${version.org.apache.maven.scm}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.scm</groupId>
                <artifactId>maven-scm-provider-gitexe</artifactId>
                <version>${version.org.apache.maven.scm}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.scm</groupId>
                <artifactId>maven-scm-provider-git-commons</artifactId>
                <version>${version.org.apache.maven.scm}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.scm</groupId>
                <artifactId>maven-scm-manager-plexus</artifactId>
                <version>${version.org.apache.maven.scm}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.scm</groupId>
                <artifactId>maven-scm-client</artifactId>
                <version>${version.org.apache.maven.scm}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery</artifactId>
                <version>${version.webjars.jquery}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>popper.js</artifactId>
                <version>${version.webjars.popper.js}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>bootstrap</artifactId>
                <version>${version.webjars.bootstrap}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>font-awesome</artifactId>
                <version>${version.webjars.font-awesome}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars.npm</groupId>
                <artifactId>primeflex</artifactId>
                <version>${version.webjars.primeflex}</version>
            </dependency>
            <dependency>
                <groupId>org.primefaces</groupId>
                <artifactId>primefaces</artifactId>
                <version>${version.org.primefaces}</version>
                <classifier>jakarta</classifier>
            </dependency>
            <dependency>
                <groupId>org.primefaces</groupId>
                <artifactId>primefaces-selenium-core</artifactId>
                <version>${version.org.primefaces}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.primefaces</groupId>
                <artifactId>primefaces-selenium-components</artifactId>
                <version>${version.org.primefaces}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.primefaces</groupId>
                <artifactId>primefaces-integration-tests</artifactId>
                <version>${version.org.primefaces}</version>
                <type>war</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.primefaces</groupId>
                <artifactId>primefaces-cli</artifactId>
                <version>${version.org.primefaces}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian.junit</groupId>
                <artifactId>arquillian-junit-container</artifactId>
                <version>${version.arquillian.core}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.protocol</groupId>
                <artifactId>arquillian-protocol-servlet</artifactId>
                <version>${version.arquillian.core}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-java</artifactId>
                <version>${selenium.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-remote-driver</artifactId>
                <version>4.1.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-api</artifactId>
                <version>4.1.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-chrome-driver</artifactId>
                <version>4.1.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-firefox-driver</artifactId>
                <version>4.1.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-opera-driver</artifactId>
                <version>4.1.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.codeborne</groupId>
                <artifactId>phantomjsdriver</artifactId>
                <version>1.5.0</version>
                <scope>test</scope>
            </dependency>
            <!--
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			-->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-launcher</artifactId>
                <version>${version.junit-platform-suite-engine}</version>
                <scope>test</scope>
            </dependency>
            <!--
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-suite-engine</artifactId>
                <version>${version.junit-platform-suite-engine}</version>
                <scope>test</scope>
            </dependency>
            -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-platform-suite</artifactId>
                <version>${version.junit-platform-suite-engine}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client</artifactId>
                <version>${version.org.jboss.resteasy}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-json-binding-provider</artifactId>
                <version>${version.org.jboss.resteasy}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxb-provider</artifactId>
                <version>${version.org.jboss.resteasy}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.json</artifactId>
                <version>${version.jakarta.json}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${version.apache.commons.commons-lang3}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${version.org.projectlombok.lombok}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse</groupId>
                <artifactId>yasson</artifactId>
                <version>2.0.4</version>
                <scope>test</scope>
            </dependency>
            <!--
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>2.18.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>2.18.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-ext</artifactId>
				<version>1.7.36</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>2.0.0-beta1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.3.0-beta0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.2.0.redhat-00004</version>
				<scope>test</scope>
			</dependency>
			-->
            <dependency>
                <groupId>org.glassfish.tyrus</groupId>
                <artifactId>tyrus-bom</artifactId>
                <version>2.1.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.grizzly</groupId>
                <artifactId>grizzly-bom</artifactId>
                <version>4.0.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.health</groupId>
            <artifactId>microprofile-health-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.metrics</groupId>
            <artifactId>microprofile-metrics-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>popper.js</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>font-awesome</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars.npm</groupId>
            <artifactId>primeflex</artifactId>
        </dependency>
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <classifier>jakarta</classifier>
        </dependency>

        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces-selenium-core</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.bytebuddy</groupId>
                    <artifactId>byte-buddy</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.code.gson</groupId>
                    <artifactId>gson</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces-selenium-components</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces-integration-tests</artifactId>
            <type>war</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces-cli</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-svnexe</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-svn-commons</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-gitexe</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-git-commons</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-manager-plexus</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-client</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>graphene-webdriver-spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-configuration</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-impl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-webdriver</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-phantom-driver</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>graphene-webdriver-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>arquillian-browser-screenshooter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>graphene-webdriver-impl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>graphene-webdriver-ftest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-impl-base</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-api-base</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-remote-driver</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-qual</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-chrome-driver</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-firefox-driver</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-opera-driver</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.codeborne</groupId>
            <artifactId>phantomjsdriver</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <scope>test</scope>
        </dependency>
        <!--
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-engine</artifactId>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>net.bytebuddy</groupId>
                    <artifactId>byte-buddy</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>net.bytebuddy</groupId>
                    <artifactId>byte-buddy</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-json-binding-provider</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxb-provider</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.json</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>yasson</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>petclinic</finalName>
        <defaultGoal>clean dependency:tree install</defaultGoal>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${version.maven-dependency-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.maven-resources-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok-maven-plugin</artifactId>
                    <version>${version.lombok-maven-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${version.maven-war-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.maven-compiler-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>${version.maven-jxr-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${version.maven-javadoc-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${version.maven-clean-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${version.maven-install-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${version.maven-deploy-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${version.maven-project-info-reports-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${version.maven-site-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${version.maven-release-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>${version.org.apache.maven.scm}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.maven-surefire-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${version.maven-failsafe-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>${version.maven-invoker-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${version.maven-pmd-plugin}</version>
                    <dependencies>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-core</artifactId>
                            <version>${version.maven-pmd-plugin.pmd}</version>
                            <scope>compile</scope>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-java</artifactId>
                            <version>${version.maven-pmd-plugin.pmd}</version>
                            <scope>compile</scope>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-javascript</artifactId>
                            <version>${version.maven-pmd-plugin.pmd}</version>
                            <scope>compile</scope>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-jsp</artifactId>
                            <version>${version.maven-pmd-plugin.pmd}</version>
                            <scope>compile</scope>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${version.maven-checkstyle-plugin}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${version.maven-checkstyle-plugin.checkstyle}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${version.maven-source-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${version.maven-surefire-report-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${version.spotbugs-maven-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>${version.asciidoctor-maven-plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <showWarnings>true</showWarnings>
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${version.org.projectlombok.lombok}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <preparationGoals>clean</preparationGoals>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <goals>package</goals>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <configuration>
                    <connectionType>developerConnection</connectionType>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!--
            <test>org.woehlke.jakartaee.petclinic.EntityUnitTestSuite</test>
            <excludes>
                <exclude>**/*UnitTest</exclude>
                <exclude>**/*ArcIT</exclude>
                <exclude>**/*EndpointIT</exclude>
            </excludes>
            -->
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <test>org.woehlke.jakartaee.petclinic.EntityUnitTestSuite</test>
                            <excludes>
                                <exclude>org/woehlke/jakartaee/petclinic/tmp/**</exclude>
                                <exclude>org/woehlke/jakartaee/petclinic/it/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-suite-engine</artifactId>
                        <version>${version.junit-platform-suite-engine}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipITs>${skip.integration.tests}</skipITs>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- INTEGRATION TEST SUITES -->
                            <includes>
                                <include>org.woehlke.jakartaee.petclinic.EntityUnitTestSuite</include>
                                <include>org.woehlke.jakartaee.petclinic.it.api.RestEndpointIT</include>
                                <include>org.woehlke.jakartaee.petclinic.UiTestSuite</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-invoker-plugin</artifactId>
                <inherited>true</inherited>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <inherited>true</inherited>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <inherited>true</inherited>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <linksource>true</linksource>
                    <maxmemory>1024m</maxmemory>
                    <source>${java.version}</source>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <configuration>
                    <linkJavadoc>true</linkJavadoc>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <configuration>
                    <skipEmptyReport>true</skipEmptyReport>
                    <dependencyDetailsEnabled>true</dependencyDetailsEnabled>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <enableRulesSummary>true</enableRulesSummary>
                    <enableSeveritySummary>true</enableSeveritySummary>
                    <enableFilesSummary>true</enableFilesSummary>
                    <failOnViolation>false</failOnViolation>
                    <failsOnError>false</failsOnError>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <configuration>
                    <failOnError>false</failOnError>
                    <detail>true</detail>
                    <relaxed>true</relaxed>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>${java.version}</targetJdk>
                    <excludeRoots>
                        <excludeRoot>target</excludeRoot>
                    </excludeRoots>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>${skip.tests}</skipTests>
                    <includes>
                        <include>**/*Tests.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/Abstract*.java</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <spring.profiles.active>default</spring.profiles.active>
                        <skipIntegrationTests>${skipIntegrationTests}</skipIntegrationTests>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                    <systemPropertyVariables>
                        <spring.profiles.active>default</spring.profiles.active>
                        <skipIntegrationTests>${skipIntegrationTests}</skipIntegrationTests>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <skipFailsafeReport>false</skipFailsafeReport>
                    <skipSurefireReport>false</skipSurefireReport>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>war</id>
            <properties>
                <skipTests>false</skipTests>
                <skip.unit.tests>false</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>clean install</defaultGoal>
            </build>
        </profile>

        <profile>
            <id>build</id>
            <properties>
                <skipTests>false</skipTests>
                <skip.unit.tests>false</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>
                    clean dependency:purge-local-repository
                    dependency:resolve dependency:resolve-plugins dependency:sources
                    dependency:analyze dependency:analyze-dep-mgt dependency:analyze-duplicate dependency:tree
                    package install
                    site site:deploy site:jar source:jar source:test-jar javadoc:jar javadoc:test-jar
                </defaultGoal>
            </build>
        </profile>

        <profile>
            <id>uml</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
                <skipTests>true</skipTests>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>com.github.funthomas424242</groupId>
                        <artifactId>plantuml-maven-plugin</artifactId>
                        <version>${version.plantuml-maven-plugin}</version>
                        <type>maven-plugin</type>
                        <exclusions>
                            <exclusion>
                                <groupId>javax.enterprise</groupId>
                                <artifactId>cdi-api</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>net.sourceforge.plantuml</groupId>
                        <artifactId>plantuml</artifactId>
                        <version>${version.net.sourceforge.plantuml}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>com.github.funthomas424242</groupId>
                    <artifactId>plantuml-maven-plugin</artifactId>
                    <type>maven-plugin</type>
                </dependency>
                <dependency>
                    <groupId>net.sourceforge.plantuml</groupId>
                    <artifactId>plantuml</artifactId>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
            <build>
                <defaultGoal>clean com.github.funthomas424242:plantuml-maven-plugin:generate</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>com.github.funthomas424242</groupId>
                        <artifactId>plantuml-maven-plugin</artifactId>
                        <version>${version.plantuml-maven-plugin}</version>
                        <configuration>
                            <truncatePattern>src/main/*</truncatePattern>
                            <sourceFiles>
                                <directory>${basedir}</directory>
                                <includes>
                                    <include>src/main/plantuml/**/*.puml</include>
                                </includes>
                            </sourceFiles>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>net.sourceforge.plantuml</groupId>
                                <artifactId>plantuml</artifactId>
                                <version>${version.net.sourceforge.plantuml}</version>
                                <scope>runtime</scope>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-liberty</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>clean install</defaultGoal>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.dkanejs.maven.plugins</groupId>
                            <artifactId>docker-compose-maven-plugin</artifactId>
                            <version>${version.docker-compose-maven-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>com.dkanejs.maven.plugins</groupId>
                        <artifactId>docker-compose-maven-plugin</artifactId>
                        <configuration>
                            <composeFile>${project.basedir}/src/main/runtimes/liberty/docker/docker-compose.yml
                            </composeFile>
                            <verbose>true</verbose>
                            <removeImages>true</removeImages>
                            <removeVolumes>true</removeVolumes>
                            <ignorePullFailures>true</ignorePullFailures>
                            <detachedMode>true</detachedMode>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-wildfly</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>clean install</defaultGoal>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.dkanejs.maven.plugins</groupId>
                            <artifactId>docker-compose-maven-plugin</artifactId>
                            <version>${version.docker-compose-maven-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>com.dkanejs.maven.plugins</groupId>
                        <artifactId>docker-compose-maven-plugin</artifactId>
                        <configuration>
                            <composeFile>${project.basedir}/src/main/runtimes/wildfly/docker/docker-compose.yml
                            </composeFile>
                            <verbose>true</verbose>
                            <removeImages>true</removeImages>
                            <removeVolumes>true</removeVolumes>
                            <ignorePullFailures>true</ignorePullFailures>
                            <detachedMode>true</detachedMode>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-glassfish</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>clean install</defaultGoal>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.dkanejs.maven.plugins</groupId>
                            <artifactId>docker-compose-maven-plugin</artifactId>
                            <version>${version.docker-compose-maven-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>com.dkanejs.maven.plugins</groupId>
                        <artifactId>docker-compose-maven-plugin</artifactId>
                        <configuration>
                            <composeFile>${project.basedir}/src/main/runtimes/glassfish/docker/docker-compose.yml
                            </composeFile>
                            <verbose>true</verbose>
                            <removeImages>true</removeImages>
                            <removeVolumes>true</removeVolumes>
                            <ignorePullFailures>true</ignorePullFailures>
                            <detachedMode>true</detachedMode>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-payara</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>clean install</defaultGoal>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.dkanejs.maven.plugins</groupId>
                            <artifactId>docker-compose-maven-plugin</artifactId>
                            <version>${version.docker-compose-maven-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>com.dkanejs.maven.plugins</groupId>
                        <artifactId>docker-compose-maven-plugin</artifactId>
                        <configuration>
                            <composeFile>${project.basedir}/src/main/runtimes/payara/docker/docker-compose.yml
                            </composeFile>
                            <verbose>true</verbose>
                            <removeImages>true</removeImages>
                            <removeVolumes>true</removeVolumes>
                            <ignorePullFailures>true</ignorePullFailures>
                            <detachedMode>true</detachedMode>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>liberty</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <!--
                    <dependency>
                        <groupId>io.openliberty.features</groupId>
                        <artifactId>features-bom</artifactId>
                        <version>${version.openliberty-runtime}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    -->
                    <dependency>
                        <!--
                        <groupId>io.openliberty</groupId>
                        -->
                        <groupId>io.openliberty</groupId>
                        <artifactId>openliberty-runtime</artifactId>
                        <version>${version.openliberty-runtime}</version>
                        <type>zip</type>
                        <scope>test</scope>
                    </dependency>
                    <!--
                    <dependency>
                        <groupId>io.openliberty.features</groupId>
                        <artifactId>jakartaee-9.1</artifactId>
                        <version>${version.openliberty-runtime}</version>
                        <type>esa</type>
                    </dependency>
                    -->
                    <dependency>
                        <groupId>io.openliberty.arquillian</groupId>
                        <artifactId>arquillian-liberty-support-jakarta</artifactId>
                        <version>${version.arquillian-liberty-support-jakarta}</version>
                        <classifier>feature</classifier>
                        <type>zip</type>
                    </dependency>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${version.postgresql.driver}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.version}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-params</artifactId>
                        <version>${junit.version}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-client</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-json-binding-provider</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-jaxb-provider</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish</groupId>
                        <artifactId>jakarta.json</artifactId>
                        <version>${version.jakarta.json}</version>
                        <scope>test</scope>
                    </dependency>
                    <!--
					<dependency>
						<groupId>org.apache.commons</groupId>
						<artifactId>commons-lang3</artifactId>
						<version>${version.apache.commons.commons-lang3}</version>
					</dependency>
					-->
                    <dependency>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${version.maven-resources-plugin}</version>
                        <type>maven-plugin</type>
                        <scope>provided</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>${version.maven-deploy-plugin}</version>
                        <type>maven-plugin</type>
                        <scope>provided</scope>
                    </dependency>
                    <dependency>
                        <groupId>io.openliberty.tools</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <version>${version.liberty-maven-plugin}</version>
                        <type>maven-plugin</type>
                        <scope>provided</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${version.maven-surefire-plugin}</version>
                        <type>maven-plugin</type>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${version.maven-failsafe-plugin}</version>
                        <type>maven-plugin</type>
                        <scope>test</scope>
                    </dependency>
                    <!--
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>restfulWS-3.1</artifactId>
						<version>${version.openliberty-runtime}</version>
						<type>esa</type>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>jsonb-3.0</artifactId>
						<version>${version.openliberty-runtime}</version>
						<type>esa</type>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>jsonp-2.1</artifactId>
						<version>${version.openliberty-runtime}</version>
						<type>esa</type>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>jsonbContainer-3.0</artifactId>
						<version>${version.openliberty-runtime}</version>
						<type>esa</type>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>jsonpContainer-2.1</artifactId>
						<version>${version.openliberty-runtime}</version>
						<type>esa</type>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>cdi-4.0</artifactId>
						<version>${version.openliberty-runtime}</version>
						<type>esa</type>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>expressionLanguage-5.0</artifactId>
						<version>${version.openliberty-runtime}</version>
						<type>esa</type>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>concurrent-3.0</artifactId>
						<version>${version.openliberty-runtime}</version>
						<type>esa</type>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>jdbc-4.2</artifactId>
						<version>${version.openliberty-runtime}</version>
						<type>esa</type>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>web-6.0</artifactId>
						<version>${version.openliberty-runtime}</version>
						<type>esa</type>
					</dependency>
					-->
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>io.openliberty.arquillian</groupId>
                    <artifactId>arquillian-liberty-support-jakarta</artifactId>
                    <classifier>feature</classifier>
                    <type>zip</type>
                </dependency>
                <!--
                <dependency>
                    <groupId>io.openliberty.features</groupId>
                    <artifactId>jakartaee-9.1</artifactId>
                    <type>esa</type>
                    <exclusions>
                        <exclusion>
                            <groupId>javax.enterprise</groupId>
                            <artifactId>cdi-api</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                -->
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-engine</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-params</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>commons-codec</groupId>
                            <artifactId>commons-codec</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-json-binding-provider</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxb-provider</artifactId>
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>com.sun.activation</groupId>
                            <artifactId>jakarta.activation</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.glassfish</groupId>
                    <artifactId>jakarta.json</artifactId>
                    <scope>test</scope>
                </dependency>
                <!--
				<dependency>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-lang3</artifactId>
				</dependency>
				-->
                <dependency>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <type>maven-plugin</type>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${version.maven-deploy-plugin}</version>
                </dependency>
                <dependency>
                    <groupId>io.openliberty.tools</groupId>
                    <artifactId>liberty-maven-plugin</artifactId>
                    <type>maven-plugin</type>
                    <scope>provided</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>org.apache.commons</groupId>
                            <artifactId>commons-lang3</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>com.google.guava</groupId>
                            <artifactId>guava</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>org.json</groupId>
                            <artifactId>json</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <type>maven-plugin</type>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <type>maven-plugin</type>
                    <scope>test</scope>
                </dependency>
                <!--
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>restfulWS-3.1</artifactId>
					<type>esa</type>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>jsonb-3.0</artifactId>
					<type>esa</type>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>jsonp-2.1</artifactId>
					<type>esa</type>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>jsonbContainer-3.0</artifactId>
					<type>esa</type>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>jsonpContainer-2.1</artifactId>
					<type>esa</type>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>cdi-4.0</artifactId>
					<type>esa</type>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>expressionLanguage-5.0</artifactId>
					<type>esa</type>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>concurrent-3.0</artifactId>
					<type>esa</type>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>jdbc-4.2</artifactId>
					<type>esa</type>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>web-6.0</artifactId>
					<type>esa</type>
				</dependency>
				-->
            </dependencies>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>clean package liberty:dev</defaultGoal>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${version.maven-resources-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-deploy-plugin</artifactId>
                            <version>${version.maven-deploy-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>io.openliberty.tools</groupId>
                            <artifactId>liberty-maven-plugin</artifactId>
                            <version>${version.liberty-maven-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <version>${version.maven-failsafe-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>${version.maven-surefire-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-clean-plugin</artifactId>
                            <version>${version.maven-clean-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-install-plugin</artifactId>
                            <version>${version.maven-install-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>id-runtimes-resources</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/liberty/resources/META-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF/classes/META-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>id-runtimes-webapps</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/liberty/webapp/WEB-INF</directory>
                                            <includes>
                                                <include>**/web.xml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-resources</id>
                                <configuration>
                                    <propertiesEncoding>UTF-8</propertiesEncoding>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>**/Messages.properties</include>
                                                <include>**/Messages_de.properties</include>
                                                <include>**/Messages_en.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/runtimes/liberty/resources</directory>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.openliberty.tools</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <configuration>
                            <runtimeArtifact>
                                <groupId>io.openliberty</groupId>
                                <artifactId>openliberty-runtime</artifactId>
                                <version>${version.openliberty-runtime}</version>
                            </runtimeArtifact>
                            <!--<installDirectory>D:/appsvr/wlp</installDirectory>-->
                            <!--<installDirectory>${project.build.directory}/liberty/wlp</installDirectory>-->
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>${skip.unit.tests}</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.junit.jupiter</groupId>
                                <artifactId>junit-jupiter-engine</artifactId>
                                <version>${junit.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- Run with: mvn clean verify -Parq-liberty-managed -->
            <id>arq-liberty-managed</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>false</skip.integration.tests>
                <serverStartTimeout>240</serverStartTimeout>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>io.openliberty.arquillian</groupId>
                    <artifactId>arquillian-liberty-managed-jakarta</artifactId>
                    <version>${version.arquillian-liberty-managed-jakarta}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.apache.httpcomponents</groupId>
                            <artifactId>httpclient</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <!--It seems OpenLiberty 21.0.0.1 beta switched to use Resteasy as Jakarta Restful WS provider.
                But there is no official public version for Jakarta EE 9 in the Maven central repository.
                Use Jersey Client in the test codes here.-->
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-binding</artifactId>
                    <version>${jersey.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.inject</groupId>
                    <artifactId>jersey-hk2</artifactId>
                    <version>${jersey.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-client</artifactId>
                    <version>${jersey.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>dependency:purge-local-repository clean verify</defaultGoal>
                <testResources>
                    <testResource>
                        <directory>src/test/runtimes/arq-liberty-managed</directory>
                        <includes>
                            <include>*</include>
                        </includes>
                        <excludes>
                            <exclude>server.xml</exclude>
                        </excludes>
                    </testResource>
                    <testResource>
                        <directory>src/test/runtimes/arq-liberty-managed</directory>
                        <includes>
                            <include>server.xml</include>
                        </includes>
                        <targetPath>
                            ${project.build.directory}/wlp/usr/servers/defaultServer
                        </targetPath>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${version.maven-dependency-plugin}</version>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>io.openliberty.beta</groupId>
                                            <artifactId>openliberty-runtime</artifactId>
                                            <version>${liberty.runtime.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>io.openliberty.arquillian</groupId>
                                            <artifactId>arquillian-liberty-support-jakarta</artifactId>
                                            <version>${version.arquillian-liberty-support-jakarta}</version>
                                            <type>zip</type>
                                            <classifier>feature</classifier>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}/wlp/usr</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>id-runtimes-resources</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/liberty/resources/META-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF/classes/META-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>id-runtimes-webapps</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/liberty/webapp/WEB-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-resources</id>
                                <configuration>
                                    <propertiesEncoding>UTF-8</propertiesEncoding>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>**/Messages.properties</include>
                                                <include>**/Messages_de.properties</include>
                                                <include>**/Messages_en.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/runtimes/liberty/resources</directory>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>${skip.unit.tests}</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${version.maven-failsafe-plugin}</version>
                        <configuration>
                            <environmentVariables>
                                <!-- WLP_HOME is not picked by arquillian liberty -->
                                <!--<WLP_HOME>${project.build.directory}/wlp</WLP_HOME>-->
                            </environmentVariables>
                            <systemPropertyVariables>
                                <arquillian.launch>liberty-managed</arquillian.launch>
                                <java.util.logging.config.file>${project.build.testOutputDirectory}/logging.properties
                                </java.util.logging.config.file>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>wildfly</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.jboss.logmanager</groupId>
                        <artifactId>jboss-logmanager</artifactId>
                        <version>${version.jboss-logmanager}</version>
                        <scope>test</scope>
                        <exclusions>
                            <exclusion>
                                <groupId>org.wildfly.common</groupId>
                                <artifactId>wildfly-common</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${version.postgresql.driver}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-client</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-json-binding-provider</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-jaxb-provider</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish</groupId>
                        <artifactId>jakarta.json</artifactId>
                        <version>${version.jakarta.json}</version>
                        <scope>test</scope>
                    </dependency>
                    <!--
					<dependency>
						<groupId>org.apache.commons</groupId>
						<artifactId>commons-lang3</artifactId>
						<version>${version.apache.commons.commons-lang3}</version>
					</dependency>
					-->
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-json-binding-provider</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxb-provider</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish</groupId>
                    <artifactId>jakarta.json</artifactId>
                    <scope>test</scope>
                </dependency>
                <!--
				<dependency>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-lang3</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.myfaces.core</groupId>
					<artifactId>myfaces-impl</artifactId>
				</dependency>
				-->
            </dependencies>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>dependency:purge-local-repository clean package verify
                    org.codehaus.cargo:cargo-maven3-plugin:run
                </defaultGoal>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${version.maven-resources-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <version>${version.cargo-maven3-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-deploy-plugin</artifactId>
                            <version>${version.maven-deploy-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <version>${version.maven-failsafe-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>${version.maven-surefire-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>id-runtimes-resources</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/wildfly/resources/META-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF/classes/META-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>id-runtimes-webapps</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/wildfly/webapp/WEB-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-resources</id>
                                <configuration>
                                    <propertiesEncoding>UTF-8</propertiesEncoding>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>**/Messages.properties</include>
                                                <include>**/Messages_de.properties</include>
                                                <include>**/Messages_en.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/runtimes/wildfly/resources</directory>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <configuration>
                            <container>
                                <containerId>wildfly27x</containerId>
                                <artifactInstaller>
                                    <groupId>org.wildfly</groupId>
                                    <artifactId>wildfly-dist</artifactId>
                                    <version>${wildfly.version}</version>
                                </artifactInstaller>
                                <dependencies>
                                    <dependency>
                                        <groupId>org.postgresql</groupId>
                                        <artifactId>postgresql</artifactId>
                                    </dependency>
                                </dependencies>
                            </container>
                            <configuration>
                                <properties>
                                    <cargo.hostname>${cargo.hostname}</cargo.hostname>
                                    <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                                    <cargo.remote.username>wildfly</cargo.remote.username>
                                    <cargo.remote.password>wildflypwd</cargo.remote.password>
                                    <!--
									<cargo.datasource.datasource.postgresql>
										cargo.datasource.driver=org.postgresql.Driver|
										cargo.datasource.url=jdbc:postgresql://localhost:5432/petclinic_jakartaee_wildfly
										cargo.datasource.jndi=jboss/datasources/PostgreSQLDS|
										cargo.datasource.username=petclinic_jakartaee|
										cargo.datasource.password=petclinic_jakartaeepwd
									</cargo.datasource.datasource.postgresql>
									-->
                                    <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
                                </properties>
                            </configuration>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.junit.jupiter</groupId>
                                <artifactId>junit-jupiter-engine</artifactId>
                                <version>${junit.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests in your
                WildFly instance -->
            <!-- This profile will start a new WildFly instance, and execute the test,
                shutting it down when done -->
            <!-- Run with: mvn clean verify -Parq-wildfly-managed -->
            <id>arq-wildfly-managed</id>
            <properties>
                <skip.unit.tests>false</skip.unit.tests>
                <skip.integration.tests>false</skip.integration.tests>
                <serverProfile>standalone-full.xml</serverProfile>
                <serverRoot>${project.build.directory}/wildfly-${wildfly.version}</serverRoot>
                <cargo.remote.username>wildfly</cargo.remote.username>
                <cargo.remote.password>wildflypwd</cargo.remote.password>
                <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
                <skipAfterFailureCount>1</skipAfterFailureCount>
                <rerunFailingTestsCount>1</rerunFailingTestsCount>
                <!--
				<cargo.datasource.datasource.postgresql>
					cargo.datasource.driver=org.postgresql.Driver|
					cargo.datasource.url=jdbc:postgresql://localhost:5432/petclinic_jakartaee_wildfly
					cargo.datasource.jndi=jboss/datasources/PostgreSQLDS|
					cargo.datasource.username=petclinic_jakartaee|
					cargo.datasource.password=petclinic_jakartaeepwd
				</cargo.datasource.datasource.postgresql>
				-->
            </properties>
            <dependencies>
                <!--<dependency>
                    <groupId>io.undertow</groupId>
                    <artifactId>undertow-websockets-jsr</artifactId>
                    <version>${undertow-websockets-jsr.version}</version>
                    <scope>test</scope>
                </dependency>-->

                <!-- TESTS -->
                <!-- JAXRS test need the dependency:resteasy-client -->
                <!-- Import the RestEasy Client and jackson2/json-binding/json-p provider, we use test scope
                    as we need that for test purposes -->
                <!--<dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <version>${resteasy.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jackson2-provider</artifactId>
                    <version>${resteasy.version}</version>
                    <scope>test</scope>
                </dependency>-->
                <dependency>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                    <version>${version.jboss-logmanager}</version>
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>org.wildfly.common</groupId>
                            <artifactId>wildfly-common</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>${version.wildfly-arquillian}</version>
                    <scope>test</scope>
                </dependency>
                <!--
				<dependency>
					<groupId>org.jboss.logmanager</groupId>
					<artifactId>jboss-logmanager</artifactId>
					<version>${version.jboss-logmanager}</version>
					<scope>test</scope>
				</dependency>
				-->
                <!-- use Jersey client instead -->
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-binding</artifactId>
                    <version>${jersey.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.inject</groupId>
                    <artifactId>jersey-hk2</artifactId>
                    <version>${jersey.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-client</artifactId>
                    <version>${jersey.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${version.postgresql.driver}</version>
                </dependency>
            </dependencies>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>dependency:purge-local-repository clean package verify</defaultGoal>
                <testResources>
                    <testResource>
                        <directory>src/test/runtimes/arq-wildfly-managed</directory>
                        <includes>
                            <include>*</include>
                        </includes>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>id-runtimes-resources</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/wildfly/resources/META-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF/classes/META-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>id-runtimes-webapps</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/wildfly/webapp/WEB-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-resources</id>
                                <configuration>
                                    <propertiesEncoding>UTF-8</propertiesEncoding>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>**/Messages.properties</include>
                                                <include>**/Messages_de.properties</include>
                                                <include>**/Messages_en.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/runtimes/wildfly/resources</directory>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>${skip.unit.tests}</skipTests>
                            <systemProperties>
                                <property>
                                    <name>skipAfterFailureCount</name>
                                    <value>1</value>
                                </property>
                                <!--
								<property>
									<name>rerunFailingTestsCount</name>
									<value>true</value>
								</property>
								-->
                            </systemProperties>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skipTests>${skip.integration.tests}</skipTests>
                            <environmentVariables>
                                <JBOSS_HOME>${project.build.directory}/wildfly-${wildfly.version}</JBOSS_HOME>
                            </environmentVariables>
                            <systemPropertyVariables>
                                <arquillian.launch>wildfly-managed</arquillian.launch>
                                <serverConfig>standalone-full.xml</serverConfig>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- An optional Arquillian testing profile that executes tests in your
                WildFly instance -->
            <!-- This profile will start a new WildFly instance, and execute the test,
                shutting it down when done -->
            <!-- Run with: mvn clean verify -Parq-wildfly-remote -->
            <id>arq-wildfly-remote</id>
            <properties>
                <skip.unit.tests>false</skip.unit.tests>
                <skip.integration.tests>false</skip.integration.tests>
                <serverProfile>standalone-full.xml</serverProfile>
                <serverRoot>${project.build.directory}/wildfly-${wildfly.version}</serverRoot>
                <cargo.remote.username>wildfly</cargo.remote.username>
                <cargo.remote.password>wildflypwd</cargo.remote.password>
                <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
                <skipAfterFailureCount>1</skipAfterFailureCount>
                <rerunFailingTestsCount>1</rerunFailingTestsCount>
                <!--
				<cargo.datasource.datasource.postgresql>
					cargo.datasource.driver=org.postgresql.Driver|
					cargo.datasource.url=jdbc:postgresql://localhost:5432/petclinic_jakartaee_wildfly
					cargo.datasource.jndi=jboss/datasources/PostgreSQLDS|
					cargo.datasource.username=petclinic_jakartaee|
					cargo.datasource.password=petclinic_jakartaeepwd
				</cargo.datasource.datasource.postgresql>
				-->
            </properties>
            <dependencies>
                <!--<dependency>
                    <groupId>io.undertow</groupId>
                    <artifactId>undertow-websockets-jsr</artifactId>
                    <version>${undertow-websockets-jsr.version}</version>
                    <scope>test</scope>
                </dependency>-->

                <!-- TESTS -->
                <!-- JAXRS test need the dependency:resteasy-client -->
                <!-- Import the RestEasy Client and jackson2/json-binding/json-p provider, we use test scope
                    as we need that for test purposes -->
                <!--<dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <version>${resteasy.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jackson2-provider</artifactId>
                    <version>${resteasy.version}</version>
                    <scope>test</scope>
                </dependency>-->
                <dependency>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                    <version>${version.jboss-logmanager}</version>
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>org.wildfly.common</groupId>
                            <artifactId>wildfly-common</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>${version.wildfly-arquillian}</version>
                    <scope>test</scope>
                </dependency>
                <!--
				<dependency>
					<groupId>org.jboss.logmanager</groupId>
					<artifactId>jboss-logmanager</artifactId>
					<version>${version.jboss-logmanager}</version>
					<scope>test</scope>
				</dependency>
				-->
                <!-- use Jersey client instead -->
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-binding</artifactId>
                    <version>${jersey.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.inject</groupId>
                    <artifactId>jersey-hk2</artifactId>
                    <version>${jersey.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-client</artifactId>
                    <version>${jersey.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${version.postgresql.driver}</version>
                </dependency>
            </dependencies>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>dependency:purge-local-repository clean package verify</defaultGoal>
                <testResources>
                    <testResource>
                        <directory>src/test/runtimes/arq-wildfly-remote</directory>
                        <includes>
                            <include>*</include>
                        </includes>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>id-runtimes-resources</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/wildfly/resources/META-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF/classes/META-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>id-runtimes-webapps</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/wildfly/webapp/WEB-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-resources</id>
                                <configuration>
                                    <propertiesEncoding>UTF-8</propertiesEncoding>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>**/Messages.properties</include>
                                                <include>**/Messages_de.properties</include>
                                                <include>**/Messages_en.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/runtimes/wildfly/resources</directory>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>${skip.unit.tests}</skipTests>
                            <systemProperties>
                                <property>
                                    <name>skipAfterFailureCount</name>
                                    <value>1</value>
                                </property>
                                <!--
								<property>
									<name>rerunFailingTestsCount</name>
									<value>true</value>
								</property>
								-->
                            </systemProperties>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skipTests>${skip.integration.tests}</skipTests>
                            <environmentVariables>
                                <JBOSS_HOME>${project.build.directory}/wildfly-${wildfly.version}</JBOSS_HOME>
                            </environmentVariables>
                            <systemPropertyVariables>
                                <arquillian.launch>wildfly-remote</arquillian.launch>
                                <serverConfig>standalone-full.xml</serverConfig>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>glassfish</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
                <cargo.glassfish.admin.port>4848</cargo.glassfish.admin.port>
                <glassfish.home>${project.build.directory}/glassfish-${glassfish.version}</glassfish.home>
                <glassfish.domainDir>
                    ${project.build.directory}/glassfish-${glassfish.version}/glassfish7/glassfish/domains/domain1
                </glassfish.domainDir>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.jboss.logmanager</groupId>
                        <artifactId>jboss-logmanager</artifactId>
                        <version>${version.jboss-logmanager}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${version.postgresql.driver}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-client</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-json-binding-provider</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-jaxb-provider</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish</groupId>
                        <artifactId>jakarta.json</artifactId>
                        <version>${version.jakarta.json}</version>
                        <scope>test</scope>
                    </dependency>
                    <!--
					<dependency>
						<groupId>org.apache.commons</groupId>
						<artifactId>commons-lang3</artifactId>
						<version>${version.apache.commons.commons-lang3}</version>
					</dependency>
					-->
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-json-binding-provider</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxb-provider</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish</groupId>
                    <artifactId>jakarta.json</artifactId>
                    <scope>test</scope>
                </dependency>
                <!--
				<dependency>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-lang3</artifactId>
				</dependency>
				-->
            </dependencies>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>clean dependency:tree package verify org.codehaus.cargo:cargo-maven3-plugin:run
                </defaultGoal>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${version.maven-resources-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <version>${version.cargo-maven3-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-deploy-plugin</artifactId>
                            <version>${version.maven-deploy-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <version>${version.maven-failsafe-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>${version.maven-surefire-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>id-persistence-xml</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/glassfish/resources/META-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>src/main/resources/META-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>clean</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>id-runtimes-webapps</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/glassfish/webapp/WEB-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-resources</id>
                                <configuration>
                                    <propertiesEncoding>UTF-8</propertiesEncoding>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>**/Messages.properties</include>
                                                <include>**/Messages_de.properties</include>
                                                <include>**/Messages_en.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/runtimes/glassfish/resources</directory>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <configuration>
                            <container>
                                <containerId>glassfish7x</containerId>
                                <zipUrlInstaller>
                                    <url>
                                        https://download.eclipse.org/ee4j/glassfish/glassfish-${glassfish.version}.zip
                                    </url>
                                    <downloadDir>${cargo.zipUrlInstaller.downloadDir}</downloadDir>
                                    <extractDir>${project.build.directory}</extractDir>
                                </zipUrlInstaller>
                                <!-- or use artifactInstaller-->
                                <!--<artifactInstaller>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>glassfish</artifactId>
                                    <version>${glassfish.version}</version>
                                </artifactInstaller>-->
                                <!-- Payara server example -->
                                <!--<container>
                                         <containerId>payara</containerId>
                                         <artifactInstaller>
                                             <groupId>fish.payara.distributions</groupId>
                                             <artifactId>payara</artifactId>
                                             <version>${payara.version}</version>
                                         </artifactInstaller>
                                     </container>-->
                                <dependencies>
                                    <dependency>
                                        <groupId>org.postgresql</groupId>
                                        <artifactId>postgresql</artifactId>
                                    </dependency>
                                </dependencies>
                            </container>
                            <configuration>
                                <!-- the configuration used to deploy -->
                                <!--<home>${project.build.directory}/glassfish6x-home</home>-->
                                <home>${glassfish.domainDir}</home>
                                <properties>
                                    <cargo.hostname>${cargo.hostname}</cargo.hostname>
                                    <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                                    <cargo.glassfish.admin.port>${cargo.glassfish.admin.port}
                                    </cargo.glassfish.admin.port>
                                    <cargo.remote.username>admin</cargo.remote.username>
                                    <cargo.remote.password>adminadmin</cargo.remote.password>
                                    <cargo.datasource.datasource.postgresql>
                                        cargo.datasource.driver=org.postgresql.Driver|
                                        cargo.datasource.url=jdbc:postgresql://localhost:5432/petclinic_jakartaee_glassfish|
                                        cargo.datasource.jndi=jdbc/petclinicDS|
                                        cargo.datasource.username=petclinic_jakartaee|
                                        cargo.datasource.password=petclinic_jakartaeepwd
                                    </cargo.datasource.datasource.postgresql>
                                </properties>
                            </configuration>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.junit.jupiter</groupId>
                                <artifactId>junit-jupiter-engine</artifactId>
                                <version>${junit.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>payara</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
                <cargo.hostname>localhost</cargo.hostname>
                <cargo.servlet.port>8080</cargo.servlet.port>
                <cargo.zipUrlInstaller.downloadDir>${project.build.directory}/../installs
                </cargo.zipUrlInstaller.downloadDir>
                <cargo.glassfish.admin.port>4848</cargo.glassfish.admin.port>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <!--
                    <dependency>
                        <groupId>fish.payara.api</groupId>
                        <artifactId>payara-bom</artifactId>
                        <version>${version.payara}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    -->
                    <dependency>
                        <groupId>org.glassfish.grizzly</groupId>
                        <artifactId>grizzly-bom</artifactId>
                        <version>4.0.0</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.hk2</groupId>
                        <artifactId>hk2-bom</artifactId>
                        <version>3.0.1</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.jersey</groupId>
                        <artifactId>jersey-bom</artifactId>
                        <version>3.1.0</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.logmanager</groupId>
                        <artifactId>jboss-logmanager</artifactId>
                        <version>${version.jboss-logmanager}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${version.postgresql.driver}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-client</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-json-binding-provider</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-jaxb-provider</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish</groupId>
                        <artifactId>jakarta.json</artifactId>
                        <version>${version.jakarta.json}</version>
                        <scope>test</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-json-binding-provider</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxb-provider</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish</groupId>
                    <artifactId>jakarta.json</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>clean verify org.codehaus.cargo:cargo-maven3-plugin:run</defaultGoal>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${version.maven-resources-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <version>${version.cargo-maven3-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-deploy-plugin</artifactId>
                            <version>${version.maven-deploy-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <version>${version.maven-failsafe-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>${version.maven-surefire-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>id-runtimes-resources</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/payara/resources/META-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF/classes/META-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>id-runtimes-webapps</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/payara/webapp/WEB-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-resources</id>
                                <configuration>
                                    <propertiesEncoding>UTF-8</propertiesEncoding>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>**/Messages.properties</include>
                                                <include>**/Messages_de.properties</include>
                                                <include>**/Messages_en.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/runtimes/payara/resources</directory>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <configuration>
                            <container>
                                <containerId>payara</containerId>
                                <zipUrlInstaller>
                                    <url>
                                        https://s3-eu-west-1.amazonaws.com/payara.fish/Payara+Downloads/${version.payara}/payara-${version.payara}.zip
                                    </url>
                                    <downloadDir>${cargo.zipUrlInstaller.downloadDir}</downloadDir>
                                    <extractDir>${project.build.directory}</extractDir>
                                </zipUrlInstaller>
                                <!-- or use artifactInstaller-->
                                <!--<artifactInstaller>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>glassfish</artifactId>
                                    <version>${glassfish.version}</version>
                                </artifactInstaller>-->
                                <dependencies>
                                    <dependency>
                                        <groupId>org.postgresql</groupId>
                                        <artifactId>postgresql</artifactId>
                                    </dependency>
                                </dependencies>
                            </container>
                            <configuration>
                                <!-- the configuration used to deploy -->
                                <!--<home>${project.build.directory}/glassfish6x-home</home>-->
                                <properties>
                                    <cargo.hostname>${cargo.hostname}</cargo.hostname>
                                    <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                                    <cargo.glassfish.admin.port>${cargo.glassfish.admin.port}
                                    </cargo.glassfish.admin.port>
                                    <cargo.remote.username>admin</cargo.remote.username>
                                    <cargo.remote.password>adminadmin</cargo.remote.password>
                                    <cargo.datasource.datasource.postgresql>
                                        cargo.datasource.driver=org.postgresql.Driver|
                                        cargo.datasource.url=jdbc:postgresql://localhost:5432/petclinic_jakartaee_payara|
                                        cargo.datasource.jndi=jdbc/petclinicDS|
                                        cargo.datasource.username=petclinic_jakartaee|
                                        cargo.datasource.password=petclinic_jakartaeepwd
                                    </cargo.datasource.datasource.postgresql>
                                </properties>
                            </configuration>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.junit.jupiter</groupId>
                                <artifactId>junit-jupiter-engine</artifactId>
                                <version>${junit.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>tomee</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
                <cargo.hostname>localhost</cargo.hostname>
                <cargo.servlet.port>8080</cargo.servlet.port>
                <cargo.zipUrlInstaller.downloadDir>${project.build.directory}/../installs
                </cargo.zipUrlInstaller.downloadDir>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.jboss.logmanager</groupId>
                        <artifactId>jboss-logmanager</artifactId>
                        <version>${version.jboss-logmanager}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${version.postgresql.driver}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-client</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-json-binding-provider</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.resteasy</groupId>
                        <artifactId>resteasy-jaxb-provider</artifactId>
                        <version>${version.org.jboss.resteasy}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish</groupId>
                        <artifactId>jakarta.json</artifactId>
                        <version>${version.jakarta.json}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-lang3</artifactId>
                        <version>${version.apache.commons.commons-lang3}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-json-binding-provider</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxb-provider</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish</groupId>
                    <artifactId>jakarta.json</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                </dependency>
            </dependencies>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>clean verify org.codehaus.cargo:cargo-maven3-plugin:run</defaultGoal>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${version.maven-resources-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <version>${version.cargo-maven3-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-deploy-plugin</artifactId>
                            <version>${version.maven-deploy-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <version>${version.maven-failsafe-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>${version.maven-surefire-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>id-persistence-xml</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/tomee/resources/META-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>src/main/resources/META-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>clean</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-resources</id>
                                <configuration>
                                    <propertiesEncoding>UTF-8</propertiesEncoding>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>**/Messages.properties</include>
                                                <include>**/Messages_de.properties</include>
                                                <include>**/Messages_en.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/runtimes/tomee/resources</directory>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <configuration>
                            <container>
                                <containerId>tomee9x</containerId>
                                <zipUrlInstaller>
                                    <url>https://dlcdn.apache.org/tomee/tomee-9.0.0/apache-tomee-9.0.0-plume.zip</url>
                                    <downloadDir>${cargo.zipUrlInstaller.downloadDir}</downloadDir>
                                    <extractDir>${project.build.directory}</extractDir>
                                </zipUrlInstaller>
                                <!-- or use artifactInstaller-->
                                <!--<artifactInstaller>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>glassfish</artifactId>
                                    <version>${glassfish.version}</version>
                                </artifactInstaller>-->
                                <dependencies>
                                    <dependency>
                                        <groupId>org.postgresql</groupId>
                                        <artifactId>postgresql</artifactId>
                                    </dependency>
                                </dependencies>
                            </container>
                            <configuration>
                                <!-- the configuration used to deploy -->
                                <!--<home>${project.build.directory}/glassfish6x-home</home>-->
                                <properties>
                                    <cargo.hostname>${cargo.hostname}</cargo.hostname>
                                    <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
                                    <cargo.remote.username>tomee</cargo.remote.username>
                                    <cargo.remote.password>tomeepwd</cargo.remote.password>
                                    <cargo.datasource.datasource.postgresql>
                                        cargo.datasource.driver=org.postgresql.Driver|
                                        cargo.datasource.url=jdbc:postgresql://localhost:5432/petclinic_jakartaee_tomee|
                                        cargo.datasource.jndi=jdbc/petclinicDS|
                                        cargo.datasource.username=petclinic_jakartaee|
                                        cargo.datasource.password=petclinic_jakartaeepwd
                                    </cargo.datasource.datasource.postgresql>
                                    <cargo.tomcat.webappsDirectory>webapps</cargo.tomcat.webappsDirectory>
                                </properties>
                            </configuration>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.junit.jupiter</groupId>
                                <artifactId>junit-jupiter-engine</artifactId>
                                <version>${junit.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>arq-glassfish-managed</id>
            <properties>
                <glassfish.version>7.0.0</glassfish.version>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>false</skip.integration.tests>
                <enableDerby>true</enableDerby>
                <cargo.glassfish.admin.port>4848</cargo.glassfish.admin.port>
                <glassfish.home>target/glassfish7</glassfish.home>
                <glassfish.domainDir>target/glassfish7/glassfish/domains/domain1</glassfish.domainDir>
                <skipAfterFailureCount>1</skipAfterFailureCount>
                <rerunFailingTestsCount>1</rerunFailingTestsCount>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.glassfish.jersey.media</groupId>
                        <artifactId>jersey-media-sse</artifactId>
                        <version>${jersey.version}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.jersey.media</groupId>
                        <artifactId>jersey-media-json-binding</artifactId>
                        <version>${jersey.version}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.jersey.media</groupId>
                        <artifactId>jersey-media-multipart</artifactId>
                        <version>${jersey.version}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.jersey.inject</groupId>
                        <artifactId>jersey-hk2</artifactId>
                        <version>${jersey.version}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.jersey.core</groupId>
                        <artifactId>jersey-client</artifactId>
                        <version>${jersey.version}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.tyrus</groupId>
                        <artifactId>tyrus-client</artifactId>
                        <version>2.1.0</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.tyrus</groupId>
                        <artifactId>tyrus-container-grizzly-client</artifactId>
                        <version>2.1.0</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.omnifaces.arquillian</groupId>
                        <artifactId>arquillian-glassfish-server-managed</artifactId>
                        <version>${version.arquillian-glassfish-server-managed}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.jboss.logmanager</groupId>
                        <artifactId>jboss-logmanager</artifactId>
                        <version>${version.jboss-logmanager}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.wildfly.common</groupId>
                        <artifactId>wildfly-common</artifactId>
                        <version>1.6.0.Final</version>
                        <scope>test</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-sse</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-binding</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-multipart</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.inject</groupId>
                    <artifactId>jersey-hk2</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-client</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.tyrus</groupId>
                    <artifactId>tyrus-client</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.tyrus</groupId>
                    <artifactId>tyrus-container-grizzly-client</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.omnifaces.arquillian</groupId>
                    <artifactId>arquillian-glassfish-server-managed</artifactId>
                    <scope>test</scope>
                    <exclusions>
                        <!--
						<exclusion>
							<groupId>org.glassfish.jersey.core</groupId>
							<artifactId>jersey-client</artifactId>
						</exclusion>
						-->
                        <exclusion>
                            <groupId>org.glassfish.jersey.inject</groupId>
                            <artifactId>jersey-hk2</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>org.glassfish.jersey.media</groupId>
                            <artifactId>jersey-media-multipart</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                    <scope>test</scope>
                    <!--
					<exclusions>
						<exclusion>
							<groupId>org.wildfly.common</groupId>
							<artifactId>wildfly-common</artifactId>
						</exclusion>
					</exclusions>
					-->
                </dependency>
                <dependency>
                    <groupId>org.wildfly.common</groupId>
                    <artifactId>wildfly-common</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <finalName>petclinic</finalName>
                <defaultGoal>clean install verify</defaultGoal>
                <testResources>
                    <testResource>
                        <directory>src/test/runtimes/it-glassfish</directory>
                    </testResource>
                </testResources>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <version>${version.maven-dependency-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>${version.maven-resources-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <version>${version.maven-failsafe-plugin}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <version>${version.cargo-maven3-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.glassfish.main.distributions</groupId>
                                            <artifactId>glassfish</artifactId>
                                            <version>${glassfish.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>id-persistence-xml</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/glassfish/resources/META-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>src/main/resources/META-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>clean</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-resources</id>
                                <configuration>
                                    <propertiesEncoding>UTF-8</propertiesEncoding>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>**/Messages.properties</include>
                                                <include>**/Messages_de.properties</include>
                                                <include>**/Messages_en.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/runtimes/glassfish/resources</directory>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.omnifaces.arquillian</groupId>
                        <artifactId>arquillian-glassfish-server-managed</artifactId>
                        <version>1.2</version>
                        <configuration>
                            <glassfishHome>target/glassfish7</glassfishHome>
                            <environmentVariables>
                                <glassfish.home>target/glassfish7</glassfish.home>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>${skip.integration.tests}</skipTests>
                            <environmentVariables>
                                <GLASSFISH_HOME>target/glassfish7</GLASSFISH_HOME>
                                <glassfish.home>target/glassfish7</glassfish.home>
                            </environmentVariables>
                            <systemProperties>
                                <property>
                                    <name>skipAfterFailureCount</name>
                                    <value>1</value>
                                </property>
                                <!--
								<property>
									<name>rerunFailingTestsCount</name>
									<value>true</value>
								</property>
								-->
                                <property>
                                    <name>glassfish.home</name>
                                    <value>target/glassfish7</value>
                                </property>
                                <property>
                                    <name>glassfishHome</name>
                                    <value>target/glassfish7</value>
                                </property>
                            </systemProperties>
                            <systemPropertyVariables>
                                <arquillian.launch>glassfish-managed</arquillian.launch>
                                <glassfish.home>target/glassfish7</glassfish.home>
                                <serverConfig>standalone-full.xml</serverConfig>
                                <my.admin.password>adminadmin</my.admin.password>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <environmentVariables>
                                <GLASSFISH_HOME>target/glassfish7</GLASSFISH_HOME>
                                <glassfish.home>target/glassfish7</glassfish.home>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>arq-payara-managed</id>
            <properties>
                <skip.tests>false</skip.tests>
                <skip.unit.tests>false</skip.unit.tests>
                <skip.integration.tests>false</skip.integration.tests>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <!--
                    <dependency>
                        <groupId>fish.payara.api</groupId>
                        <artifactId>payara-bom</artifactId>
                        <version>${version.payara}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    -->
                    <dependency>
                        <groupId>org.glassfish.grizzly</groupId>
                        <artifactId>grizzly-bom</artifactId>
                        <version>4.0.0</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.hk2</groupId>
                        <artifactId>hk2-bom</artifactId>
                        <version>3.0.1</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.glassfish.jersey</groupId>
                        <artifactId>jersey-bom</artifactId>
                        <version>3.1.0</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <dependency>
                        <groupId>fish.payara.arquillian</groupId>
                        <artifactId>environment-setup</artifactId>
                        <version>${version.arquillian-payara}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>fish.payara.arquillian</groupId>
                        <artifactId>integration-tests</artifactId>
                        <version>${version.arquillian-payara}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>fish.payara.arquillian</groupId>
                        <artifactId>payara-container-common</artifactId>
                        <version>${version.arquillian-payara}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>fish.payara.arquillian</groupId>
                        <artifactId>arquillian-payara-server-managed</artifactId>
                        <version>${version.arquillian-payara}</version>
                        <scope>test</scope>
                    </dependency>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${version.postgresql.driver}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>environment-setup</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>integration-tests</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-container-common</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-managed</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </dependency>

                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-framework</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-server</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-servlet</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-portunif</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-ajp</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-websockets</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http2</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-comet</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-server-multipart</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-server-jaxws</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-servlet-extras</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>tls-sni</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>connection-pool</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly.osgi</groupId>
                    <artifactId>grizzly-httpservice</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-framework-monitoring</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-monitoring</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-server-monitoring</artifactId>
                </dependency>
                <!-- Bundles -->
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-core</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-server-core</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-all</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-http-servlet-server</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-websockets-server</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly</groupId>
                    <artifactId>grizzly-comet-server</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.grizzly.osgi</groupId>
                    <artifactId>grizzly-httpservice-bundle</artifactId>
                </dependency>

                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-common</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-server</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.bundles</groupId>
                    <artifactId>jaxrs-ri</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.connectors</groupId>
                    <artifactId>jersey-apache-connector</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.connectors</groupId>
                    <artifactId>jersey-apache5-connector</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.connectors</groupId>
                    <artifactId>jersey-helidon-connector</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.connectors</groupId>
                    <artifactId>jersey-grizzly-connector</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.connectors</groupId>
                    <artifactId>jersey-jnh-connector</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.connectors</groupId>
                    <artifactId>jersey-jetty-connector</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.connectors</groupId>
                    <artifactId>jersey-jdk-connector</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.connectors</groupId>
                    <artifactId>jersey-netty-connector</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-jetty-http</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-grizzly2-http</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-grizzly2-servlet</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-jetty-servlet</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-jdk-http</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-netty-http</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-servlet</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-servlet-core</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-simple-http</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.containers.glassfish</groupId>
                    <artifactId>jersey-gf-ejb</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-bean-validation</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-entity-filtering</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-metainf-services</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.microprofile</groupId>
                    <artifactId>jersey-mp-config</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-mvc</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-mvc-bean-validation</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-mvc-freemarker</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-mvc-jsp</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-mvc-mustache</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-proxy-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-spring6</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-declarative-linking</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext</groupId>
                    <artifactId>jersey-wadl-doclet</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.cdi</groupId>
                    <artifactId>jersey-weld2-se</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.cdi</groupId>
                    <artifactId>jersey-cdi1x</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.cdi</groupId>
                    <artifactId>jersey-cdi1x-transaction</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.cdi</groupId>
                    <artifactId>jersey-cdi1x-validation</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.cdi</groupId>
                    <artifactId>jersey-cdi1x-servlet</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.cdi</groupId>
                    <artifactId>jersey-cdi1x-ban-custom-hk2-binding</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.cdi</groupId>
                    <artifactId>jersey-cdi-rs-inject</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.rx</groupId>
                    <artifactId>jersey-rx-client-guava</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.rx</groupId>
                    <artifactId>jersey-rx-client-rxjava</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.rx</groupId>
                    <artifactId>jersey-rx-client-rxjava2</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.ext.microprofile</groupId>
                    <artifactId>jersey-mp-rest-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-jaxb</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-jackson</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-jettison</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-processing</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-gson</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-binding</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-kryo</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-moxy</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-multipart</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-sse</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.security</groupId>
                    <artifactId>oauth1-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.security</groupId>
                    <artifactId>oauth1-server</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.security</groupId>
                    <artifactId>oauth1-signature</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.security</groupId>
                    <artifactId>oauth2-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.inject</groupId>
                    <artifactId>jersey-hk2</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.inject</groupId>
                    <artifactId>jersey-cdi2-se</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.test-framework</groupId>
                    <artifactId>jersey-test-framework-core</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                    <artifactId>jersey-test-framework-provider-bundle</artifactId>
                    <type>pom</type>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                    <artifactId>jersey-test-framework-provider-external</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                    <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                    <artifactId>jersey-test-framework-provider-inmemory</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                    <artifactId>jersey-test-framework-provider-jdk-http</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                    <artifactId>jersey-test-framework-provider-simple</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                    <artifactId>jersey-test-framework-provider-jetty</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.test-framework</groupId>
                    <artifactId>jersey-test-framework-util</artifactId>
                </dependency>
            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/runtimes/arq-payara-managed</directory>
                    </testResource>
                </testResources>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>fish.payara.arquillian</groupId>
                            <artifactId>arquillian-payara-server-managed</artifactId>
                            <version>${version.arquillian-payara}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>fish.payara.distributions</groupId>
                                            <artifactId>payara</artifactId>
                                            <version>${version.payara}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>id-runtimes-resources</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/payara/resources/META-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF/classes/META-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>id-runtimes-webapps</id>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>src/main/runtimes/payara/webapp/WEB-INF</directory>
                                        </resource>
                                    </resources>
                                    <outputDirectory>target/petclinic/WEB-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-resources</id>
                                <configuration>
                                    <propertiesEncoding>UTF-8</propertiesEncoding>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <includes>
                                                <include>**/Messages.properties</include>
                                                <include>**/Messages_de.properties</include>
                                                <include>**/Messages_en.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>src/main/runtimes/payara/resources</directory>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                </configuration>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>fish.payara.arquillian</groupId>
                        <artifactId>arquillian-payara-server-managed</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>${skip.unit.tests}</skipTests>
                            <systemProperties>
                                <property>
                                    <name>skipAfterFailureCount</name>
                                    <value>1</value>
                                </property>
                                <!--
								<property>
									<name>rerunFailingTestsCount</name>
									<value>true</value>
								</property>
								-->
                            </systemProperties>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <payara.home>${project.build.directory}/payara6</payara.home>
                                <arquillian.launch>payara-managed</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
